// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RepositoryLayer.Data;

#nullable disable

namespace RepositoryLayer.Migrations
{
    [DbContext(typeof(RepositoryContext))]
    partial class RepositoryContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DomainLayer.Models.Administrator", b =>
                {
                    b.Property<Guid>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UserID");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Avatar")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ConfirmPassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("UserID");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Administrators");

                    b.HasData(
                        new
                        {
                            UserID = new Guid("f3f97f86-f1de-4d67-a62b-21e60bb3f5ec"),
                            Age = 18,
                            Avatar = "hg",
                            ConfirmPassword = "itsTheEndOfThe$Pasta1",
                            Email = "mariopasta@gmail.com",
                            IsActive = false,
                            Password = "itsTheEndOfThe$Pasta1",
                            Username = "Mario"
                        },
                        new
                        {
                            UserID = new Guid("aa2f10e2-a65b-4ef8-87b2-66b37b971872"),
                            Age = 21,
                            Avatar = "ku",
                            ConfirmPassword = "thatsHowMafia7$Works",
                            Email = "adminer@gmail.com",
                            IsActive = false,
                            Password = "thatsHowMafia7$Works",
                            Username = "admin"
                        });
                });

            modelBuilder.Entity("DomainLayer.Models.Client", b =>
                {
                    b.Property<Guid>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UserID");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Avatar")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ConfirmPassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Incapacity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserLocationID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("UserID");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("UserLocationID");

                    b.ToTable("Clients");

                    b.HasData(
                        new
                        {
                            UserID = new Guid("f3dd50ce-bb1e-4c88-9e9a-2e51f75c4434"),
                            Age = 22,
                            Avatar = "as",
                            ConfirmPassword = "forTheMotherFoca@7",
                            Email = "josefino@gmail.com",
                            Incapacity = "",
                            IsActive = true,
                            Password = "forTheMotherFoca@7",
                            UserLocationID = new Guid("5313e5aa-6aea-4262-8a44-b5e1d01c8962"),
                            Username = "Joseph"
                        },
                        new
                        {
                            UserID = new Guid("9d064a8e-ebb2-4d40-97b6-bb79a5d8452d"),
                            Age = 30,
                            Avatar = "gv",
                            ConfirmPassword = "euGostoDeCamul123$",
                            Email = "carlitosbritos@gmail.com",
                            Incapacity = "wheelChair",
                            IsActive = true,
                            Password = "euGostoDeCamul123$",
                            UserLocationID = new Guid("a3283abe-4d51-41e7-b3f0-fc13dd773c25"),
                            Username = "Carlos"
                        },
                        new
                        {
                            UserID = new Guid("83bb0eaf-5dca-40ac-9960-1d7de79435c0"),
                            Age = 16,
                            Avatar = "bh",
                            ConfirmPassword = "queijo123ComBacon$",
                            Email = "diogomorfador@gmail.com",
                            Incapacity = "",
                            IsActive = true,
                            Password = "queijo123ComBacon$",
                            UserLocationID = new Guid("5313e5aa-6aea-4262-8a44-b5e1d01c8962"),
                            Username = "Diogo"
                        },
                        new
                        {
                            UserID = new Guid("6b7310d0-42e7-4498-9aec-4260e10fa080"),
                            Age = 22,
                            Avatar = "yh",
                            ConfirmPassword = "sirvaPureComArroz$1",
                            Email = "ceftigas@gmail.com",
                            Incapacity = "",
                            IsActive = true,
                            Password = "sirvaPureComArroz$1",
                            UserLocationID = new Guid("5313e5aa-6aea-4262-8a44-b5e1d01c8962"),
                            Username = "Tiago"
                        });
                });

            modelBuilder.Entity("DomainLayer.Models.Course", b =>
                {
                    b.Property<Guid>("CourseID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CourseID");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<Guid>("EndPointID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IncapacityAcessible")
                        .HasColumnType("bit");

                    b.Property<Guid>("InitialPointID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("CourseID");

                    b.HasIndex("EndPointID");

                    b.HasIndex("InitialPointID");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            CourseID = new Guid("99b6dfce-cf03-4fb1-b153-2d85a5c978c7"),
                            Description = "Path from A to I",
                            EndPointID = new Guid("67efb852-f501-4755-a6e9-c5c83b05b941"),
                            IncapacityAcessible = true,
                            InitialPointID = new Guid("9aa08875-8921-4c23-b67f-1881a2e32782")
                        },
                        new
                        {
                            CourseID = new Guid("097ad3c5-5bcb-48c4-bba8-538a1b61cc6c"),
                            Description = "Path from I to A",
                            EndPointID = new Guid("9aa08875-8921-4c23-b67f-1881a2e32782"),
                            IncapacityAcessible = true,
                            InitialPointID = new Guid("67efb852-f501-4755-a6e9-c5c83b05b941")
                        },
                        new
                        {
                            CourseID = new Guid("7b3e78c3-814f-4b97-b647-6834783ebada"),
                            Description = "Path from I to B",
                            EndPointID = new Guid("b9040891-d05d-4d45-b074-b9f229df5136"),
                            IncapacityAcessible = true,
                            InitialPointID = new Guid("67efb852-f501-4755-a6e9-c5c83b05b941")
                        },
                        new
                        {
                            CourseID = new Guid("4b758ac8-a8dc-4e80-85dc-efee63ee69da"),
                            Description = "Path from B to I",
                            EndPointID = new Guid("67efb852-f501-4755-a6e9-c5c83b05b941"),
                            IncapacityAcessible = true,
                            InitialPointID = new Guid("b9040891-d05d-4d45-b074-b9f229df5136")
                        },
                        new
                        {
                            CourseID = new Guid("1f9e0996-4764-4cb3-8bd6-fc1f19fceea2"),
                            Description = "Path from B to G",
                            EndPointID = new Guid("624e7d79-c54a-4905-b377-f32e137a4cb6"),
                            IncapacityAcessible = true,
                            InitialPointID = new Guid("b9040891-d05d-4d45-b074-b9f229df5136")
                        },
                        new
                        {
                            CourseID = new Guid("a5e9c37e-3c8f-482b-bdf7-2e6f6a52706e"),
                            Description = "Path from G to B",
                            EndPointID = new Guid("b9040891-d05d-4d45-b074-b9f229df5136"),
                            IncapacityAcessible = true,
                            InitialPointID = new Guid("624e7d79-c54a-4905-b377-f32e137a4cb6")
                        },
                        new
                        {
                            CourseID = new Guid("12bf1d60-d833-414f-832f-49db5b58e591"),
                            Description = "Path from G to H",
                            EndPointID = new Guid("946e4a21-bc98-4bb0-b8e6-e2ea7e1fec6a"),
                            IncapacityAcessible = true,
                            InitialPointID = new Guid("624e7d79-c54a-4905-b377-f32e137a4cb6")
                        },
                        new
                        {
                            CourseID = new Guid("471a79f4-ef9c-48c7-aa39-7e8f3dd05227"),
                            Description = "Path from H to G",
                            EndPointID = new Guid("624e7d79-c54a-4905-b377-f32e137a4cb6"),
                            IncapacityAcessible = true,
                            InitialPointID = new Guid("946e4a21-bc98-4bb0-b8e6-e2ea7e1fec6a")
                        },
                        new
                        {
                            CourseID = new Guid("3505fb67-2834-44ad-84c4-1089e77e8c10"),
                            Description = "Path from H to A",
                            EndPointID = new Guid("9aa08875-8921-4c23-b67f-1881a2e32782"),
                            IncapacityAcessible = true,
                            InitialPointID = new Guid("946e4a21-bc98-4bb0-b8e6-e2ea7e1fec6a")
                        },
                        new
                        {
                            CourseID = new Guid("b5570534-f022-4277-879d-26ec309d2e1a"),
                            Description = "Path from A to H",
                            EndPointID = new Guid("946e4a21-bc98-4bb0-b8e6-e2ea7e1fec6a"),
                            IncapacityAcessible = true,
                            InitialPointID = new Guid("9aa08875-8921-4c23-b67f-1881a2e32782")
                        },
                        new
                        {
                            CourseID = new Guid("4ba06619-5907-404a-9bb2-65524aefd01e"),
                            Description = "Path from A to AuditorioMagno",
                            EndPointID = new Guid("4ed93ab5-319c-473e-a04d-c04ea9e237ee"),
                            IncapacityAcessible = true,
                            InitialPointID = new Guid("9aa08875-8921-4c23-b67f-1881a2e32782")
                        },
                        new
                        {
                            CourseID = new Guid("a0304656-1c57-45d7-9f2f-4dea821fdc69"),
                            Description = "Path from AuditorioMagno to A ",
                            EndPointID = new Guid("9aa08875-8921-4c23-b67f-1881a2e32782"),
                            IncapacityAcessible = true,
                            InitialPointID = new Guid("4ed93ab5-319c-473e-a04d-c04ea9e237ee")
                        },
                        new
                        {
                            CourseID = new Guid("b5b8b886-2c3c-4287-bcf8-a541a1936446"),
                            Description = "Path from H to AuditorioMagno",
                            EndPointID = new Guid("4ed93ab5-319c-473e-a04d-c04ea9e237ee"),
                            IncapacityAcessible = true,
                            InitialPointID = new Guid("946e4a21-bc98-4bb0-b8e6-e2ea7e1fec6a")
                        },
                        new
                        {
                            CourseID = new Guid("e35ca02f-a0bc-4f98-91f3-ba78c55fe2bd"),
                            Description = "Path from AuditorioMagno to H",
                            EndPointID = new Guid("946e4a21-bc98-4bb0-b8e6-e2ea7e1fec6a"),
                            IncapacityAcessible = true,
                            InitialPointID = new Guid("4ed93ab5-319c-473e-a04d-c04ea9e237ee")
                        });
                });

            modelBuilder.Entity("DomainLayer.Models.Feedback", b =>
                {
                    b.Property<Guid>("FeedbackID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("FeedbackID");

                    b.Property<Guid>("ClientID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CloudFolderURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FeedbackDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FeedbackDescription")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<Guid>("FeedbackLocationID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("FeedbackID");

                    b.HasIndex("ClientID");

                    b.HasIndex("FeedbackLocationID");

                    b.ToTable("Feedbacks");

                    b.HasData(
                        new
                        {
                            FeedbackID = new Guid("9b7cd70b-9276-4278-acce-59b12bbd7a68"),
                            ClientID = new Guid("f3dd50ce-bb1e-4c88-9e9a-2e51f75c4434"),
                            CloudFolderURL = "https://www.google.com",
                            FeedbackDate = new DateTime(2023, 5, 26, 18, 7, 46, 323, DateTimeKind.Utc).AddTicks(6353),
                            FeedbackDescription = "I cant see the building!",
                            FeedbackLocationID = new Guid("5313e5aa-6aea-4262-8a44-b5e1d01c8962")
                        },
                        new
                        {
                            FeedbackID = new Guid("797fe6df-1828-41ba-a5df-9d8e0a3809da"),
                            ClientID = new Guid("9d064a8e-ebb2-4d40-97b6-bb79a5d8452d"),
                            CloudFolderURL = "https://www.google.com",
                            FeedbackDate = new DateTime(2023, 5, 26, 18, 7, 46, 323, DateTimeKind.Utc).AddTicks(6363),
                            FeedbackDescription = "It is in construction work!",
                            FeedbackLocationID = new Guid("a3283abe-4d51-41e7-b3f0-fc13dd773c25")
                        },
                        new
                        {
                            FeedbackID = new Guid("e0e94b6c-a75e-4a69-8c1e-b2f7885151b2"),
                            ClientID = new Guid("83bb0eaf-5dca-40ac-9960-1d7de79435c0"),
                            CloudFolderURL = "https://www.google.com",
                            FeedbackDate = new DateTime(2023, 5, 26, 18, 7, 46, 323, DateTimeKind.Utc).AddTicks(6367),
                            FeedbackDescription = "The building is different.",
                            FeedbackLocationID = new Guid("5313e5aa-6aea-4262-8a44-b5e1d01c8962")
                        },
                        new
                        {
                            FeedbackID = new Guid("8d02939f-63fa-464a-a0ca-cb09b6bebeb2"),
                            ClientID = new Guid("6b7310d0-42e7-4498-9aec-4260e10fa080"),
                            CloudFolderURL = "https://www.google.com",
                            FeedbackDate = new DateTime(2023, 5, 26, 18, 7, 46, 323, DateTimeKind.Utc).AddTicks(6371),
                            FeedbackDescription = "The sight is awful!",
                            FeedbackLocationID = new Guid("5313e5aa-6aea-4262-8a44-b5e1d01c8962")
                        },
                        new
                        {
                            FeedbackID = new Guid("7c0524a8-0f24-4270-bf75-b7ce63feb5a9"),
                            ClientID = new Guid("83bb0eaf-5dca-40ac-9960-1d7de79435c0"),
                            CloudFolderURL = "https://www.google.com",
                            FeedbackDate = new DateTime(2023, 5, 26, 18, 7, 46, 323, DateTimeKind.Utc).AddTicks(6375),
                            FeedbackDescription = "The place smells bad!",
                            FeedbackLocationID = new Guid("5313e5aa-6aea-4262-8a44-b5e1d01c8962")
                        },
                        new
                        {
                            FeedbackID = new Guid("72ff822d-fbf1-48b4-b364-c138b6c1a914"),
                            ClientID = new Guid("9d064a8e-ebb2-4d40-97b6-bb79a5d8452d"),
                            CloudFolderURL = "https://www.google.com",
                            FeedbackDate = new DateTime(2023, 5, 26, 18, 7, 46, 323, DateTimeKind.Utc).AddTicks(6378),
                            FeedbackDescription = "Good path with awesome view!",
                            FeedbackLocationID = new Guid("5313e5aa-6aea-4262-8a44-b5e1d01c8962")
                        },
                        new
                        {
                            FeedbackID = new Guid("ab003761-232c-4c97-acf5-826065e56c56"),
                            ClientID = new Guid("f3dd50ce-bb1e-4c88-9e9a-2e51f75c4434"),
                            CloudFolderURL = "https://www.google.com",
                            FeedbackDate = new DateTime(2023, 5, 26, 18, 7, 46, 323, DateTimeKind.Utc).AddTicks(6381),
                            FeedbackDescription = "Thank you for the reception from ISEP!",
                            FeedbackLocationID = new Guid("5313e5aa-6aea-4262-8a44-b5e1d01c8962")
                        });
                });

            modelBuilder.Entity("DomainLayer.Models.GPSCoordinates", b =>
                {
                    b.Property<Guid>("LocationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LocationID");

                    b.Property<double>("Latitude")
                        .HasColumnType("float");

                    b.Property<double>("Longitude")
                        .HasColumnType("float");

                    b.HasKey("LocationID");

                    b.ToTable("GPSCoordinates");

                    b.HasData(
                        new
                        {
                            LocationID = new Guid("a3283abe-4d51-41e7-b3f0-fc13dd773c25"),
                            Latitude = 41.178472726585674,
                            Longitude = -8.6087807216442869
                        },
                        new
                        {
                            LocationID = new Guid("44fa0f16-c58d-430c-ab5a-97ef4d9c6f61"),
                            Latitude = 41.177711788665363,
                            Longitude = -8.6077586936904744
                        },
                        new
                        {
                            LocationID = new Guid("32323b97-e58d-49ee-98f2-2f10f1be7111"),
                            Latitude = 41.178843863356043,
                            Longitude = -8.60702514650362
                        },
                        new
                        {
                            LocationID = new Guid("b8513d2c-9be7-4906-850d-4299056c438e"),
                            Latitude = 41.179110097095872,
                            Longitude = -8.6070945594407782
                        },
                        new
                        {
                            LocationID = new Guid("1631324d-5da4-4c04-93a2-a320f5bdb14d"),
                            Latitude = 41.179469643235471,
                            Longitude = -8.6059597348474224
                        },
                        new
                        {
                            LocationID = new Guid("d69dfd7e-9d29-4ea4-a057-65d1d7d4f581"),
                            Latitude = 41.179276075812993,
                            Longitude = -8.6078482087685995
                        },
                        new
                        {
                            LocationID = new Guid("dbced685-8e74-4f2b-9178-c0fbc04cf564"),
                            Latitude = 41.177564994929561,
                            Longitude = -8.6083047981405159
                        },
                        new
                        {
                            LocationID = new Guid("3aef4f84-dc03-4a24-91c3-8936921907d6"),
                            Latitude = 41.177967145422194,
                            Longitude = -8.6085062262311105
                        },
                        new
                        {
                            LocationID = new Guid("9218dee3-812a-44f7-a117-0456eb888a82"),
                            Latitude = 41.178104599027193,
                            Longitude = -8.6079171398224492
                        },
                        new
                        {
                            LocationID = new Guid("feec28de-b0e1-4ed6-97b4-b3964aa45f1c"),
                            Latitude = 41.178429896021797,
                            Longitude = -8.6075151873977322
                        },
                        new
                        {
                            LocationID = new Guid("6e723e95-6a99-4ae1-aea2-64c4442c3ce9"),
                            Latitude = 41.178984721995306,
                            Longitude = -8.6083692036936128
                        },
                        new
                        {
                            LocationID = new Guid("98489606-551b-420c-8096-462e0deadcac"),
                            Latitude = 41.177841263041209,
                            Longitude = -8.6079983063935739
                        },
                        new
                        {
                            LocationID = new Guid("eebf553f-a4ae-4047-a969-a9096bbb24f6"),
                            Latitude = 41.178773264549697,
                            Longitude = -8.608947821523687
                        },
                        new
                        {
                            LocationID = new Guid("dfc50880-0c57-4d33-8b7b-0b5d99ba4d7c"),
                            Latitude = 41.178155377732104,
                            Longitude = -8.6083497177966759
                        },
                        new
                        {
                            LocationID = new Guid("7b2f6f93-7b9d-4812-abce-a6c49ea5a345"),
                            Latitude = 41.17833004000633,
                            Longitude = -8.6068877514979683
                        },
                        new
                        {
                            LocationID = new Guid("54ab0c02-5de2-41ff-8915-4e03e01f09c3"),
                            Latitude = 41.178602169673589,
                            Longitude = -8.6089645852372154
                        },
                        new
                        {
                            LocationID = new Guid("1dcccab2-7df4-420b-9978-55943542df46"),
                            Latitude = 41.1794081572219,
                            Longitude = -8.6066880570955586
                        },
                        new
                        {
                            LocationID = new Guid("3bfcb259-34bb-4feb-ad61-3654097adb62"),
                            Latitude = 41.179435815023893,
                            Longitude = -8.6070977092565961
                        },
                        new
                        {
                            LocationID = new Guid("257246ee-7845-439d-b51a-7fb3e7136ee4"),
                            Latitude = 41.17944250803648,
                            Longitude = -8.6086616434248153
                        },
                        new
                        {
                            LocationID = new Guid("01f4542f-73f0-4b47-9111-c6f2a4e9d61d"),
                            Latitude = 41.179084789896223,
                            Longitude = -8.6087289902487836
                        },
                        new
                        {
                            LocationID = new Guid("5313e5aa-6aea-4262-8a44-b5e1d01c8962"),
                            Latitude = 0.0,
                            Longitude = 0.0
                        });
                });

            modelBuilder.Entity("DomainLayer.Models.Point", b =>
                {
                    b.Property<Guid>("PointID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("PointID");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Image360")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<Guid>("PointLocationID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PointName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("PointID");

                    b.HasIndex("PointLocationID");

                    b.HasIndex("PointName")
                        .IsUnique();

                    b.ToTable("Points");

                    b.HasData(
                        new
                        {
                            PointID = new Guid("9aa08875-8921-4c23-b67f-1881a2e32782"),
                            Description = "Beacon from Building A",
                            Image360 = "sd",
                            PointLocationID = new Guid("a3283abe-4d51-41e7-b3f0-fc13dd773c25"),
                            PointName = "Beacon A"
                        },
                        new
                        {
                            PointID = new Guid("b9040891-d05d-4d45-b074-b9f229df5136"),
                            Description = "Beacon from Building B",
                            Image360 = "ng",
                            PointLocationID = new Guid("44fa0f16-c58d-430c-ab5a-97ef4d9c6f61"),
                            PointName = "Beacon B"
                        },
                        new
                        {
                            PointID = new Guid("a47c8ec8-f04c-48ff-b9ac-13ac1f760e4a"),
                            Description = "Beacon from Building C",
                            Image360 = "jy",
                            PointLocationID = new Guid("32323b97-e58d-49ee-98f2-2f10f1be7111"),
                            PointName = "Beacon C"
                        },
                        new
                        {
                            PointID = new Guid("f9c54552-dd35-41e2-81ca-3e6b161e036d"),
                            Description = "Beacon from Building D",
                            Image360 = "gv",
                            PointLocationID = new Guid("b8513d2c-9be7-4906-850d-4299056c438e"),
                            PointName = "Beacon D"
                        },
                        new
                        {
                            PointID = new Guid("6f7fc315-cd70-4914-b205-e99d731eb858"),
                            Description = "Beacon from Building E",
                            Image360 = "uh",
                            PointLocationID = new Guid("1631324d-5da4-4c04-93a2-a320f5bdb14d"),
                            PointName = "Beacon E"
                        },
                        new
                        {
                            PointID = new Guid("3a40db35-7852-40cd-ae6d-83c87ff9851c"),
                            Description = "Beacon from Building F",
                            Image360 = "bj",
                            PointLocationID = new Guid("d69dfd7e-9d29-4ea4-a057-65d1d7d4f581"),
                            PointName = "Beacon F"
                        },
                        new
                        {
                            PointID = new Guid("624e7d79-c54a-4905-b377-f32e137a4cb6"),
                            Description = "Beacon from Building G",
                            Image360 = "rh",
                            PointLocationID = new Guid("dbced685-8e74-4f2b-9178-c0fbc04cf564"),
                            PointName = "Beacon G"
                        },
                        new
                        {
                            PointID = new Guid("946e4a21-bc98-4bb0-b8e6-e2ea7e1fec6a"),
                            Description = "Beacon from Building H",
                            Image360 = "jg",
                            PointLocationID = new Guid("3aef4f84-dc03-4a24-91c3-8936921907d6"),
                            PointName = "Beacon H"
                        },
                        new
                        {
                            PointID = new Guid("67efb852-f501-4755-a6e9-c5c83b05b941"),
                            Description = "Beacon from Building I",
                            Image360 = "gb",
                            PointLocationID = new Guid("9218dee3-812a-44f7-a117-0456eb888a82"),
                            PointName = "Beacon I"
                        },
                        new
                        {
                            PointID = new Guid("dbc624be-5f60-4886-a01a-7676708a0313"),
                            Description = "Beacon from Building J",
                            Image360 = "ad",
                            PointLocationID = new Guid("feec28de-b0e1-4ed6-97b4-b3964aa45f1c"),
                            PointName = "Beacon J"
                        },
                        new
                        {
                            PointID = new Guid("d9e82cd6-5a83-47c7-a12e-cf50ae3e041d"),
                            Description = "Beacon from Building K",
                            Image360 = "db",
                            PointLocationID = new Guid("6e723e95-6a99-4ae1-aea2-64c4442c3ce9"),
                            PointName = "Beacon K"
                        },
                        new
                        {
                            PointID = new Guid("70e264fb-b93c-4870-acb9-9027cedfe93e"),
                            Description = "Beacon from Building L",
                            Image360 = "cd",
                            PointLocationID = new Guid("98489606-551b-420c-8096-462e0deadcac"),
                            PointName = "Beacon L"
                        },
                        new
                        {
                            PointID = new Guid("ba33e56c-240e-414a-b73b-077827c0b6b8"),
                            Description = "Entry from parking car next to Auditorio Magno",
                            Image360 = "ws",
                            PointLocationID = new Guid("eebf553f-a4ae-4047-a969-a9096bbb24f6"),
                            PointName = "Beacon Entry Backs"
                        },
                        new
                        {
                            PointID = new Guid("98d31708-cc3f-4701-b51a-ffaf87a67a42"),
                            Description = "Entry from Building H",
                            Image360 = "rt",
                            PointLocationID = new Guid("dfc50880-0c57-4d33-8b7b-0b5d99ba4d7c"),
                            PointName = "Beacon Entry Main Gate"
                        },
                        new
                        {
                            PointID = new Guid("d7ccb306-cc59-455a-8c98-3c9f35f8a4b9"),
                            Description = "Entry from building E",
                            Image360 = "gf",
                            PointLocationID = new Guid("7b2f6f93-7b9d-4812-abce-a6c49ea5a345"),
                            PointName = "Beacon Front Entry"
                        },
                        new
                        {
                            PointID = new Guid("4ed93ab5-319c-473e-a04d-c04ea9e237ee"),
                            Description = "Auditorio Magno Building",
                            Image360 = "hb",
                            PointLocationID = new Guid("54ab0c02-5de2-41ff-8915-4e03e01f09c3"),
                            PointName = "Auditório Magno"
                        });
                });

            modelBuilder.Entity("DomainLayer.Models.Client", b =>
                {
                    b.HasOne("DomainLayer.Models.GPSCoordinates", "UserLocation")
                        .WithMany()
                        .HasForeignKey("UserLocationID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserLocation");
                });

            modelBuilder.Entity("DomainLayer.Models.Course", b =>
                {
                    b.HasOne("DomainLayer.Models.Point", "EndPoint")
                        .WithMany()
                        .HasForeignKey("EndPointID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("DomainLayer.Models.Point", "InitialPoint")
                        .WithMany()
                        .HasForeignKey("InitialPointID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("EndPoint");

                    b.Navigation("InitialPoint");
                });

            modelBuilder.Entity("DomainLayer.Models.Feedback", b =>
                {
                    b.HasOne("DomainLayer.Models.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DomainLayer.Models.GPSCoordinates", "FeedbackLocation")
                        .WithMany()
                        .HasForeignKey("FeedbackLocationID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("FeedbackLocation");
                });

            modelBuilder.Entity("DomainLayer.Models.Point", b =>
                {
                    b.HasOne("DomainLayer.Models.GPSCoordinates", "PointLocation")
                        .WithMany()
                        .HasForeignKey("PointLocationID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PointLocation");
                });
#pragma warning restore 612, 618
        }
    }
}
